 # This workflow is named "Node.js CI/CD"
name: Node.js CI/CD

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ] # Or your primary branch
  pull_request:
    branches: [ "main" ] # Or your primary branch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job builds the frontend
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest # Runs on the latest version of Ubuntu Linux

    steps:
      # Step 1: Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Sets up Node.js environment
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json # Point cache to the correct lock file

      # Step 3: Install frontend dependencies using npm ci
      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./Frontend  # <-- This is the key change!

      # Step 4: Run the build script for the frontend
      - name: Build Frontend
        run: npm run build --if-present
        working-directory: ./Frontend  # <-- Run this in the Frontend directory too

  # This job builds the backend
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks out your repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Sets up Node.js environment
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: Backend/package-lock.json # Point cache to the correct lock file

      # Step 3: Install backend dependencies using npm ci
      - name: Install Backend Dependencies
        run: npm ci
        working-directory: ./Backend  # <-- Run this in the Backend directory

      # Step 4: Run a build script if the backend has one (optional)
      # Many backends don't have a "build" step, but this is here just in case
      - name: Build Backend
        run: npm run build --if-present
        working-directory: ./Backend
